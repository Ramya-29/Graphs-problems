public int helpaterp(int[][] hospital) {
        // code here
        int n = hospital.length;
        int m = hospital[0].length;
        int not_infected = 0;
        Queue<int[]> q = new LinkedList<>();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(hospital[i][j]==2){
                    q.add(new int[]{i,j});
                }
                if(hospital[i][j]==1){
                    not_infected++;
                }
            }
        }
       
        int infected = 0;
        int min_time = 0;
        while(!q.isEmpty()){
            int n1 = q.size();
            for(int i=0;i<n1;i++){
                int[] a = q.poll();
                int x = a[0];
                int y = a[1];
                if(x+1<n && x+1>=0 && hospital[x+1][y]==1 ){
                    hospital[x+1][y]=2;
                    infected=infected+1;
                    q.add(new int[]{x+1,y});
                }
                if(x-1>=0 && x-1<n && hospital[x-1][y]==1){
                    hospital[x-1][y]=2;
                    infected=infected+1;
                    q.add(new int[]{x-1,y});
                }
                if(y+1<m && y+1>=0 && hospital[x][y+1]==1){
                    hospital[x][y+1]=2;
                    infected=infected+1;
                    q.add(new int[]{x,y+1});
                }
                if(y-1<n && y-1>=0 && hospital[x][y-1]==1){
                    hospital[x][y-1]=2;
                    infected=infected+1;
                    q.add(new int[]{x,y-1});
                }
            }
            if(q.size()>0){
                min_time++;
            }
        }
        if(not_infected != infected){
            return -1;
        }
        return min_time;
}

